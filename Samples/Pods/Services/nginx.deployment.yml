apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: my-nginx
spec:
  replicas: 2
  selector: 
    matchLabels: 
      app: my-nginx
  template: 
    metadata: 
      labels:
        app: my-nginx
    spec:
      containers:
      - name: my-nginx
        image: nginx:alpine 
        ports:
        - containerPort: 80
        resources:
          limits:
            memory: "128Mi" #128 MB
            cpu: "200m" #200 millicpu (.2 cpu or 20% of the cpu)


# k apply -f nginx.deployment.yml 
# k get all
# k get pods // copy NAME of 1 pod
# k port-forward pod/my-nginx-5975c9f858-8r6kv 8080:80 // when we stop this command the port 8080 doesn't serve anything
# k port-forward deployment/my-nginx 8080 // This is not going to run because nginx is on port 80
# k port-forward deployment/my-nginx 8080:80 // This is one run because we changed nginx is to port 80 
# k describe deployment my-nginx
# k get deploy
# k get deployments
# k get deployments --show-labels
# k get deployments -l app=my-nginx
# k get all
# k scale -f nginx.deployment.yml --replicas=4
# k get all
# k delete -f nginx.deployment.yml
# k get all
# k apply -f nginx.deployment.yml ## when we have requested for 4 replicas
# k get all
# k apply -f nginx.deployment.yml ## when we have requested for 2 replicas
# k get all